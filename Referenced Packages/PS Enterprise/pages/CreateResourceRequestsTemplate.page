<!-- use a list controller in order to use this for a custom list button
     on the Resource Request related list.
     
     this page is meant to be a template for the creation of requests for the opportunity
     and project pages.  -->
<apex:page title="{!$Label.create_res_req_title}" standardController="pse__Resource_Request__c"
    recordSetVar="resourceRequests" extensions="pse.CreateResourceRequestsController" id="templatePage"
    action="{!init}">  
    
<script type="text/javascript">
// toggles the status div that displays a generic progress message and spinning icon
function toggleStatus(show)
{
    var aDiv = document.getElementById("ajaxStatusDiv");
    if (aDiv != null)
        aDiv.style.display = show ? "block" : "none";
}

function deleteRow(deleteComp)
{
    if (confirm("Delete this row?"))
    {
        document.getElementById(deleteComp).value = "true";
        toggleStatus(true);
        jsDeleteRow();
    }
}

function onAddClick()
{
    toggleStatus(true);
    jsAdd();
}

function onAddSkillClick()
{
    toggleStatus(true);
    jsAddSkill();
}

function onSaveClick()
{
    toggleStatus(true);
    jsSave();
}

// keep track of the current primary skill so we can quickly switch it's value to false
// when a new skill is made primary. note that it should be ok not to update this dynamically
// on a rerender because at worst we would just be re-setting an already false value to false again
var currentPrimarySkillHiddenId = null;
// added new code as fix for agile task:1112  Dated:14 Oct,2011  By: Aditi
var defaultNoPrimarySkill = "{!defaultNoPrimarySkill}";

function updatePrimarySkillRadio(tableId, newHiddenId)
{
//    console.log('Table id: ' + tableId + ';current id: ' + currentPrimarySkillHiddenId);
    
    // NOTE: tableId includes the row number
    var newHiddenId = tableId + ":primarySkillHidden";
    // Added as fix for agile task: 000011112  dated: 13 Oct,2011  By:Aditi
    //-----------------------------------------------------------
    tableId += "";
    var rowNo = tableId.substring(tableId.lastIndexOf(":")+1);
    var primarySkillRadio = document.getElementsByName("primaryRadio");
    if (defaultNoPrimarySkill == 'true') {
        var hiddenElement = document.getElementById(newHiddenId);
        if (hiddenElement.value == 'true') {
            hiddenElement.value = "false";
            primarySkillRadio[rowNo].checked = false;
        } else {
            hiddenElement.value = "true";
            primarySkillRadio[rowNo].checked = true;
        }
    } else {
        document.getElementById(newHiddenId).value = "true";
    }
    //-----------------------------------------------------------
    if (currentPrimarySkillHiddenId != newHiddenId && 
        document.getElementById(currentPrimarySkillHiddenId) != null)
        document.getElementById(currentPrimarySkillHiddenId).value = "false";
    
    currentPrimarySkillHiddenId = newHiddenId;
}

function onCancelClick()
{
    jsCancel();
}
</script>

    <!-- To be used for a section header  -->
    <apex:insert name="sectionHeader"/>
    
    <apex:pageMessages id="messageSection"/>
    
    <apex:outputText rendered="{!displayContent}">First, request some resources and optionally include skills and certifications.</apex:outputText><p />
    
    <!-- include this panel in the rerender attribute in order to hide the status div when the operation has completed -->
    <apex:outputPanel id="resetStatusPanel">
        <script type="text/javascript">toggleStatus(false);</script>
    </apex:outputPanel>
    
    <apex:pageBlock title="{!$Label.create_res_req_label_add_resources}" mode="edit" id="resourceBlock" rendered="{!displayContent}">
        <apex:pageBlockButtons >
            <input type="button" value="{!$Label.common_label_add}" onclick="onAddClick()" class="btn"/>
        </apex:pageBlockButtons>
        
        <!-- keep a separate form from the bottom section to avoid required field validation error when
            performing actions in the bottom section. This form includes the skills panel in order
            to allow an "Add" action to capture the currently entered skill that hasn't yet been committed
            using the Add Skill button. In order to enable this functionality and avoid required field validation errors
            the required fields should be defaulted with data or set to not required.  -->
        <apex:form id="addForm">
        
        <apex:actionFunction name="jsAdd" reRender="newResourceSection,skillsPanel,resRequestTable,messageSection,resetStatusPanel" action="{!addResourceRequests}"/>
        <apex:actionFunction name="jsAddSkill" reRender="skillsPanel,messageSection,resetStatusPanel" action="{!addSkill}"/>
        
        <!-- this section is for rendering the fields for a new resource  -->
        <apex:insert name="resourcesSection">
            <!-- shown for reference only - this section should be overridden  -->
            <apex:pageBlockSection title="{!$Label.create_res_req_label_resources}" columns="2" id="newResourceSection"
                collapsible="false"/>
        </apex:insert> 

        <apex:outputPanel id="skillsPanel">
			
			<!--  Updated as fix for agile task: AT0746  dated: 16 Apr,2012  By:Shankar  -->
						
            <apex:pageBlockSection title="{!$Label.create_res_req_label_skills_and_certs}" columns="2" id="skillSection"
                collapsible="false">
                <apex:pageBlockSectionItem id="skillsSection">
                    <apex:outputLabel value="Skill / Certification" for="skill" />
                    <apex:outputPanel >
                        <apex:inputField id="skill" required="false" value="{!newSkillRequest.pse__Skill_Certification__c}" rendered="{!NOT(skillAndCertCustomLookup)}"/>
                        <c:SkillAndCertLookup id="skillsLookup" required="true" value="{!newSkillRequest.pse__Skill_Certification__c}" rendered="{!skillAndCertCustomLookup}"/>
                    </apex:outputPanel>                     
                </apex:pageBlockSectionItem>
                <apex:inputField value="{!newSkillRequest.pse__Minimum_Rating__c}"/>
            </apex:pageBlockSection>
            
            <div align="center">
                <apex:image value="{!URLFOR($Resource.pse__appirioCommon, '/plus-icon.png')}"
                        onclick="javascript:onAddSkillClick()" alt="add skill" title="{!$Label.create_res_req_label_request_skill}"
                        />
                <!-- note: cannot execute the JS in the href b/c it will invoke the onbeforeunload handler in IE -->
                <a href="javascript:onAddSkillClick()" style="vertical-align:middle;">{!$Label.create_res_req_label_add_requested_skill}</a>
            </div>
    
            <!-- used just to display the header -->        
            <apex:pageBlockSection title="{!$Label.create_res_req_label_requested_skills}" collapsible="false"/>
            
            <apex:pageBlockTable id="skillTable" value="{!newSkillRequests}" var="skill" cellspacing="0" cellpadding="0"
               rowClasses="odd,even" styleClass="tableClass" border="0" 
               rendered="{!renderSkillsTable}">
                <apex:column headerValue="{!$Label.create_res_req_label_primary}">
                   <apex:inputHidden id="primarySkillHidden" value="{!skill.pse__Is_Primary__c}"/>
                   <!-- there appears to be a VF bug that prevents me from inlining a checked 
                       attribute with an expression 
                       (e.g., <input type="radio" {!IF(skill.Is_Primary__c, 'checked', null)} ...).
                       It compiles fine but gives a runtime warning that there is no end tag.  -->
                   <apex:outputPanel rendered="{!skill.pse__Is_Primary__c}">
                       <input type="radio" name="primaryRadio" checked="true"
                           onClick="updatePrimarySkillRadio('{!$Component.skillTable}')" />
                       <!-- this is the primary skill, update the var that tracks the current primary skill -->
                       <script type="text/javascript">currentPrimarySkillHiddenId = "{!$Component.primarySkillHidden}";</script>
                   </apex:outputPanel>
                   <apex:outputPanel rendered="{!NOT(skill.pse__Is_Primary__c)}">
                       <input type="radio" name="primaryRadio" 
                       onClick="updatePrimarySkillRadio('{!$Component.skillTable}')" />
                   </apex:outputPanel>
                       
                </apex:column>
                <apex:column headerValue="{!$Label.create_res_req_label_skill_cert}">
                    <apex:outputField value="{!skill.pse__Skill_Certification__c}"/>
                </apex:column>
                <apex:column headerValue="{!$Label.create_res_req_label_min_rating}">
                    <apex:outputField value="{!skill.pse__Minimum_Rating__c}"/>
                </apex:column>
            </apex:pageBlockTable>
            <!-- this div is rendered if there are no skills -->
            <div align="center">
                <apex:outputText value="{!$Label.create_res_req_label_no_skills}" rendered="{!NOT(renderSkillsTable)}"/>
            </div>
        </apex:outputPanel>
        
        </apex:form>
        
    </apex:pageBlock>
    
    <apex:outputText rendered="{!displayContent}">{!$Label.create_res_req_message_done_adding_instruction}</apex:outputText><p />

    <apex:form id="mainForm">
    
    <apex:actionFunction name="jsDeleteRow" reRender="resRequestTable,messageSection,resetStatusPanel" action="{!deleteRow}"/>
    <apex:actionFunction name="jsSave" reRender="messageSection,resetStatusPanel,rrRowPB" action="{!save}"/>
    <apex:actionFunction name="jsCancel" reRender="messageSection" action="{!cancel}" immediate="true"/>

    <apex:pageBlock id="rrRowPB" title="{!$Label.create_res_req_label_new_resource_requests}" rendered="{!displayContent}">
        <apex:pageBlockButtons >
            <input type="button" style="margin-right:5px;" value="{!$Label.common_label_save}" onclick="onSaveClick()" class="btn"/>
            <!-- 
            <apex:commandButton value="{!$Label.common_label_cancel}" action="{!cancel}"/>
            -->
            <input type="button" style="margin-right:5px;" value="{!$Label.common_label_cancel}" onclick="onCancelClick()" class="btn"/>
        </apex:pageBlockButtons>
        <!-- 
            Changes done as fix for agile task: 000011118   Dated: 10 Aug, 2011
            Added style below to highlight the error row with red color.
         -->
        <apex:pageBlockTable id="resRequestTable" value="{!requestWrappers}" var="reqWrapper" cellspacing="0" cellpadding="0"
           rowClasses="odd,even" styleClass="tableClass" border="0">
            <apex:column >
                <!-- to delete, the js function updates the hidden field. the controller will loop through 
                    and find the wrapper marked for deletion.  -->
                <apex:image id="deleteIcon" value="{!URLFOR($Resource.pse__appirioCommon, '/delete-icon.gif')}"
                    height="15" width="15" onclick="deleteRow('{!$Component.markedForDelete}')"/>
                <apex:inputHidden value="{!reqWrapper.isMarkedForDelete}" id="markedForDelete"/>
            </apex:column>
            
            <apex:repeat value="{!createRRFromProjOrOppColumns}" var="fName" >
				<apex:column headerValue="{!fName.Label}" style="{!IF(reqWrapper.isError,'color:red;','')}" > 
    				<apex:outputField value="{!reqWrapper.req[fName]}"/>
				</apex:column>
            </apex:repeat>
            <apex:column headerValue="{!$Label.create_res_req_label_skils_certs}" style="{!IF(reqWrapper.isError,'color:red;','')}" >
                <apex:outputText value="{!reqWrapper.skillsDescription}"/>
            </apex:column>
        </apex:pageBlockTable>
    </apex:pageBlock>
    
    <div id="ajaxStatusDiv" style="display:none;height:32px;" align="center">
        <apex:image value="{!URLFOR($Resource.pse__appirioCommon, 'progress-rotation.gif')}"/> 
        <span style="line-height:32px;vertical-align:top;margin-left:6px;">{!$Label.common_message_processing_wait}</span>
    </div>
    
    </apex:form>
</apex:page>